{"version":3,"sources":["config.js","pages/Table.js","App.jsx","pages/Form.js","pages/Login.js","index.js"],"names":["BASE_URL","TablePage","navigate","useNavigate","_useState","useState","source","destination","container_size","email","_useState2","Object","slicedToArray","inputs","_useState3","_useState4","data","setData","StyledTableCell","styled","TableCell","_ref","_ref2","theme","defineProperty","concat","tableCellClasses","head","backgroundColor","palette","common","black","color","white","body","fontSize","useEffect","localStorage","getItem","fetch","URLSearchParams","method","credentials","then","_ref3","asyncToGenerator","_regeneratorRuntime","mark","_callee","resp","wrap","_context","prev","next","json","sent","console","log","stop","_x","apply","this","arguments","StyledTableRow","TableRow","_ref4","&:nth-of-type(odd)","action","hover","&:last-child td, &:last-child th","border","react_default","a","createElement","Fragment","Button","variant","onClick","clear","TableContainer","component","Paper","Table","sx","minWidth","aria-label","TableHead","align","TableBody","map","row","key","fields","name","scope","exim","rate","created_by","App","Form","setInputs","handleInputChange","e","persist","objectSpread","target","value","className","type","onChange","placeholder","title","required","item","style","display","flexDirection","marginRight","uploader","preventDefault","JSON","stringify","response","status","username","password","onSubmit","crossDomain","setItem","sendMessage","ReactDOM","createRoot","document","getElementById","render","react_router_dom","react_router","path","element","to","pages_Table","Login","pages_Form"],"mappings":"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","file":"static/js/main.01194290.chunk.js","sourcesContent":["let BASE_URL = \"https://rate-crm.herokuapp.com\";\n//let BASE_URL = \"http://127.0.0.1:8000/\";\nexport default BASE_URL\n","import React, { useEffect, useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport { styled } from \"@mui/material/styles\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { Button } from \"@mui/material\";\nimport Paper from \"@mui/material/Paper\";\nimport BASE_URL from \"../config\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nfunction TablePage() {\n  const navigate = useNavigate();\n\n  const [inputs, setInputs] = useState({\n    source: \"\",\n    destination: \"\",\n    container_size: \"\",\n    email: \"\",\n  });\n  const [data, setData] = useState([]);\n\n  const StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 14,\n    },\n  }));\n\n   const search = () => {\n     fetch(BASE_URL + \"search?\" + new URLSearchParams(inputs), {\n      method: \"GET\",\n      credentials: \"include\",\n    }).then(async function (resp) {\n        let data = await resp.json()\n         console.log(data)\n      setData(data);\n    });\n  };\n  useEffect(() => {\n    if (\n      !(\n        \"Login_status\" in localStorage &&\n        localStorage.getItem(\"Login_status\") == \"true\"\n      )\n    )\n      navigate(\"/login\");\n    search();\n  }, []);\n\n  const StyledTableRow = styled(TableRow)(({ theme }) => ({\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n    // hide last border\n    \"&:last-child td, &:last-child th\": {\n      border: 0,\n    },\n  }));\n  return (\n    <>\n      <Button variant=\"contained\" onClick={() => navigate(\"/add\")}>\n        Add Rate\n      </Button>\n      <Button\n        variant=\"contained\"\n        onClick={() => {\n          localStorage.clear();\n          navigate(\"/login\")\n        }}\n      >\n        Logout\n      </Button>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 450 }} aria-label=\"simple table\">\n          <TableHead>\n            <StyledTableRow>\n              <StyledTableCell>Ex/Im</StyledTableCell>\n              <StyledTableCell align=\"right\">Port of Loading</StyledTableCell>\n              <StyledTableCell align=\"right\">\n                Port of Destination\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">Container Size</StyledTableCell>\n              <StyledTableCell align=\"right\">Rate</StyledTableCell>\n              <StyledTableCell align=\"right\">Uploaded By</StyledTableCell>\n              <StyledTableCell align=\"right\">Delete Rate</StyledTableCell>\n            </StyledTableRow>\n          </TableHead>\n          <TableBody>\n            {   data.map((row) => (\n              <StyledTableRow\n                key={row.fields.name}\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              >\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  {row.fields.exim}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">{row.fields.source}</StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {row.fields.destination}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {row.fields.container_size}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">{row.fields.rate}</StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {row.fields.created_by}\n                </StyledTableCell>\n                <StyledTableCell>\n                  Delete\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default TablePage;\n","import './App.css';\nimport TablePage from './pages/Table';\nimport React, { Component }  from 'react';\n\nfunction App() {\n  return (\n    <div>\n      <TablePage/>\n    </div>\n  );\n}\n\nexport default App;\n","import React, {useEffect, useState} from 'react'\n// import { useForm } from 'react-hook-form';\n// const { useForm } = ReactHookForm\nimport \"./form.css\"\nimport BASE_URL from '../config'\nimport { useNavigate } from 'react-router-dom'\n\n\nconst Form = () => {\n    const navigate = useNavigate()\n    const [inputs, setInputs] = useState({source: '', destination: '', rate: 0, email: '', container_size: ''});\n    const handleInputChange = (e) => {\n        e.persist();\n        setInputs(inputs => ({...inputs, [e.target.name]: e.target.value}));\n    }\n\n    useEffect(()=>{\n        if(!(\"Login_status\" in localStorage && localStorage.getItem(\"Login_status\") == \"true\")) navigate(\"/login\")\n    },[])\n    const sendMessage = (e) => {\n        if (e) e.preventDefault();\n        // console.log(BASE_URL + \"/add\")\n        fetch(`https://rate-crm.herokuapp.com/add`, {\n            method: 'POST',\n            credentials: 'include',\n            body: JSON.stringify(inputs),\n            // redirect: \"manual\"\n        }).then(response => {\n            if(response.status === 200){\n                navigate(\"/table\")\n            }\n        })\n    }\n    return (\n        <div className=\"contact__wrap\">\n            <h1>Add Rates</h1>\n            <form\n                // onSubmit={e => sendMessage(e)}\n                className=\"contact__form\">\n                <div>\n                    <label>\n                        <input\n                            name='exim'\n                            type=\"radio\"\n                            value=\"Import\"\n                            // checked={setselectedOption1(\"Import\")}\n                            onChange={e => handleInputChange(e)}\n                        />\n                        Import\n                    </label>\n                    <label>\n                        <input\n                            name='exim'\n                            type=\"radio\"\n                            value=\"Export\"\n                            // checked={setselectedOption1(\"Export\")}\n                            onChange={e => handleInputChange(e)}\n                        />\n                        Export\n                    </label>\n                </div>\n                <select\n                    value={inputs.source}\n                    onChange={e => handleInputChange(e)}\n                    type=\"text\" name=\"source\"\n                    placeholder=\"source\"\n                    title=\"Port of Loading\"\n                    required>\n                        {[\"Port of Loading\", \"NHAVA SHEVA\", \"HAZIRA\", \"CHENNAI\", \"MUNDRA\", \"ICD TKD\", \"Qingdao\", \"SHANGHAI\", \"TAINJIN\", \"SHEKOU\", \"FUZHOU\", \"NINGBO\", \"NANSHA\"].map(item => (<option value={item}>{item}</option>))}\n                    </select>\n                <select\n                    value={inputs.destination}\n                    onChange={e => handleInputChange(e)}\n                    type=\"text\" name=\"destination\"\n                    placeholder=\"destination\"\n                    title=\"Port of Destination\"\n                    required>\n                        {[\"Port of Destination\",\"NHAVA SHEVA\", \"HAZIRA\", \"CHENNAI\", \"MUNDRA\", \"ICD TKD\", \"Qingdao\", \"SHANGHAI\", \"TAINJIN\", \"SHEKOU\", \"FUZHOU\", \"NINGBO\", \"NANSHA\"].map(item => (<option value={item}>{item}</option>))}\n                    </select>\n                <div style={{display: 'flex', flexDirection: \"row\"}}>\n\n                    <h3 style={{marginRight: 20}}>\n                        Container Size\n                    </h3>\n\n                    <label>\n                        <input\n                            name='container_size'\n                            type=\"radio\"\n                            value=\"20FT\"\n                            // checked={setselectedOption1(\"Import\")}\n                            onChange={e => handleInputChange(e)}\n                        />\n                        20FT\n                    </label>\n                    <label>\n                        <input\n                            name='container_size'\n                            type=\"radio\"\n                            value=\"40FT\"\n                            // checked={setselectedOption1(\"Export\")}\n                            onChange={e => handleInputChange(e)}\n                        />\n                        40FT\n                    </label>\n                    <label>\n                        <input\n                            name='container_size'\n                            type=\"radio\"\n                            value=\"40HQ\"\n                            // checked={setselectedOption1(\"Export\")}\n                            onChange={e => handleInputChange(e)}\n                        />\n                        40HQ\n                    </label>\n                </div>\n                <input\n                    value={inputs.rate}\n                    onChange={e => handleInputChange(e)}\n                    type=\"number\" name=\"rate\"\n                    placeholder=\"rate\"\n                    title=\"Rate\"\n                    required/>\n                <input\n                    value={inputs.uploader}\n                    onChange={e => handleInputChange(e)}\n                    name=\"email\"\n                    placeholder=\"Uploaded By\"\n                    title=\"Uploader By\"\n                    required/>\n                <input\n                    type=\"submit\"\n                    onClick={sendMessage}\n                    value=\"SUBMIT\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default Form","import React, { useState } from \"react\";\n// import { useForm } from 'react-hook-form';\n// const { useForm } = ReactHookForm\nimport \"./form.css\";\nimport BASE_URL from \"../config\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Form = () => {\n  const navigate = useNavigate();\n  const [inputs, setInputs] = useState({ username: \"\", password: \"\" });\n  const handleInputChange = (e) => {\n    e.persist();\n    setInputs((inputs) => ({ ...inputs, [e.target.name]: e.target.value }));\n  };\n\n  const sendMessage = (e) => {\n    if (e) e.preventDefault();\n    fetch(BASE_URL + \"/login\", {\n      method: \"POST\",\n      crossDomain: true,\n      credentials: \"include\",\n      body: JSON.stringify(inputs),\n    }).then(function (resp) {\n      if (resp.status === 200) {\n        localStorage.setItem(\"Login_status\", true);\n        navigate(\"/table\");\n      }\n      console.log(resp);\n    });\n  };\n  return (\n    <div className=\"contact__wrap\">\n      <h1>Login</h1>\n      <form onSubmit={(e) => sendMessage(e)} className=\"contact__form\">\n        <div>\n          <label>Email</label>\n          <input\n            name=\"username\"\n            type=\"text\"\n            value={inputs.email}\n            // checked={setselectedOption1(\"Import\")}\n            onChange={(e) => handleInputChange(e)}\n          />\n        </div>\n        <div>\n          <label>Password</label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            value={inputs.password}\n\n            onChange={(e) => handleInputChange(e)}\n          />\n        </div>\n        <input type=\"submit\" value=\"LOGIN\" />\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter, Route, Routes, Navigate} from \"react-router-dom\";\nimport Table from \"./pages/Table\";\nimport Form from \"./pages/Form\";\nimport Login from \"./pages/Login\";\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n\n    <BrowserRouter>\n        <Routes>\n            <Route path=\"/\" element={<Navigate to=\"/login\" />} />\n            <Route path=\"/table\" element={<Table />} />\n            <Route path='/login' element={<Login/>}/>\n            <Route path=\"/add\" element={<Form />} />\n        </Routes>\n    </BrowserRouter>\n  \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}